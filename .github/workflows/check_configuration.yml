name: Check modified configuration.yaml

on:
  workflow_call:
    inputs:
      config_file: # the variable you can use in place of a matrix
        required: true
        type: string

jobs:
  check_keys:
    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [self-hosted, dl4miceverywhere-builder]

    name: Check attributes/keys
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Check notebook_url attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: notebook_url
        with:
          cmd: yq '.notebook_url' '${{ inputs.config_file }}' 
      - name: Check requirements_url attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: requirements_url
        with:
          cmd: yq '.requirements_url' '${{ inputs.config_file }}' 
      - name: Check cuda_version attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: cuda_version
        with:
          cmd: yq '.cuda_version' '${{ inputs.config_file }}' 
      - name: Check ubuntu_version attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: ubuntu_version
        with:
          cmd: yq '.ubuntu_version' '${{ inputs.config_file }}' 
      - name: Check python_version attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: python_version
        with:
          cmd: yq '.python_version' '${{ inputs.config_file }}'
      - name: Check sections_to_remove attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: sections_to_remove
        with:
          cmd: yq '.sections_to_remove' '${{ inputs.config_file }}'  
      - name: Check version attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: version
        with:
          cmd: yq '.version' '${{ inputs.config_file }}'  
      - name: Check description attribute on configuration.yaml
        uses: mikefarah/yq@master
        id: description
        with:
          cmd: yq '.description' '${{ inputs.config_file }}'  
      - run: |
          if [[ 'null' = '${{ steps.notebook_url.outputs.result }}' ]] ; then 
            echo 'The key notebook_url is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.requirements_url.outputs.result }}' ]] ; then 
            echo 'The key requirements_url is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.cuda_version.outputs.result }}' ]] ; then 
            echo 'The key cuda_version is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.ubuntu_version.outputs.result }}' ]] ; then 
            echo 'The key ubuntu_version is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.python_version.outputs.result }}' ]] ; then 
            echo 'The key python_version is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.sections_to_remove.outputs.result }}' ]] ; then 
            echo 'The key sections_to_remove is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.version.outputs.result }}' ]] ; then 
            echo 'The key version is not in the configuration.yaml file.' 
            exit 1
          elif [[ 'null' = '${{ steps.description.outputs.result }}' ]] ; then 
            echo 'The key description is not in the configuration.yaml file.' 
            exit 1
          else 
            echo 'The configuration.yaml file is defined with all its keys.'
          fi
  
  check_urls:  
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [self-hosted, dl4miceverywhere-builder]

    name: Check notebook's and requirements' URLs
    needs: [check_keys]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Extract the notebook URL
        id: extract_nb_url
        uses: mikefarah/yq@master
        with:
          cmd: yq '.notebook_url' '${{ inputs.config_file }}' 
      - name: Extract the requirements URL
        id: extract_rq_url
        uses: mikefarah/yq@master
        with:
          cmd: yq '.requirements_url' '${{ inputs.config_file }}' 
      - name: Check that notebook's URL exists
        uses: filiph/linkcheck@2.0.23
        with:
          arguments: ${{ steps.extract_nb_url.outputs.result }}
      - name: Check that requirements' URL exists
        uses: filiph/linkcheck@2.0.23
        with:
          arguments: ${{ steps.extract_rq_url.outputs.result }}

  check_docker_build_without_gpu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [self-hosted, dl4miceverywhere-builder]

    name: Check running 'docker build' for amd64 and arm64 without GPU
    needs: [check_keys, check_urls]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3   
      
      - name: Build without GPU
        uses: docker/build-push-action@v5
        with:
          push: false
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE="ubuntu:${{ steps.ubuntu_version.outputs.result }}"
            GPU_FLAG=0
            PYTHON_VERSION="${{ steps.python_version.outputs.result }}"
            PATH_TO_NOTEBOOK="${{ steps.notebook_url.outputs.result }}"
            PATH_TO_REQUIREMENTS="${{ steps.requirements_url.outputs.result }}"
            NOTEBOOK_NAME="${(echo $(basename ${{ steps.notebook_url.outputs.result }} .ipynb) | tr '[:upper:]' '[:lower:]')}"
            SECTIONS_TO_REMOVE="${{ steps.sections_to_remove.outputs.result }}"
            
          
  check_docker_build_with_gpu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [self-hosted, dl4miceverywhere-builder]

    name: Check running 'docker build' for amd64 and arm64 with GPU
    needs: [check_keys, check_urls]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3   
      - name: Build with GPU
        uses: docker/build-push-action@v5
        with:
          push: false
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE="nvidia/cuda:${{ steps.cuda_version.outputs.result }}-base-ubuntu${{ steps.ubuntu_version.outputs.result }}"
            GPU_FLAG=1
            PYTHON_VERSION="${{ steps.python_version.outputs.result }}"
            PATH_TO_NOTEBOOK="${{ steps.notebook_url.outputs.result }}"
            PATH_TO_REQUIREMENTS="${{ steps.requirements_url.outputs.result }}"
            NOTEBOOK_NAME="${(echo $(basename ${{ steps.notebook_url.outputs.result }} .ipynb) | tr '[:upper:]' '[:lower:]')}"
            SECTIONS_TO_REMOVE="${{ steps.sections_to_remove.outputs.result }}"
        
    
