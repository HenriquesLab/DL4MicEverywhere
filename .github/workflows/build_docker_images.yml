name: Build Docker Images

on:
    workflow_dispatch:

jobs:
    list_configs:
        name: Get the list of configuration files on the repository
        runs-on: [self-hosted, dl4miceverywhere-builder]
        outputs: 
            matrix: ${{ steps.list_configs.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: List configurations
              id: list_configs
              run: |
                configurations_list=$(ls ./notebooks/*/*/configuration.yaml)
                echo "Start"
                files_json="{\"include\":[{\"notebook\":\""
                echo "$files_json"
                first=true
                for file in $configurations_list; do
                  echo "$file was changed"
                  if [ "$first" = true ]; then
                    files_json+=$file
                    first=false
                  else
                    files_json+="\"},{\"notebook\":\""$file
                  fi
                  echo "$files_json"
                done
                files_json+="\"}]}"
                echo "$files_json"
                echo "matrix=$files_json" >> $GITHUB_OUTPUT
                echo "END"
            - name: Print matrix
              run: |
                echo ${{ steps.list_configs.outputs.matrix }}

    build_images:
        name: Build Docker images
        runs-on: [self-hosted, dl4miceverywhere-builder]
        needs: list_configs
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.list_configs.outputs.matrix) }} 
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
    
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
                
            - name: Get version
              uses: mikefarah/yq@master
              id: version
              with:
                  cmd: yq '.version' '${{ matrix.notebook }}'  

            - name: Get notebook_path
              uses: mikefarah/yq@master
              id: notebook_path
              with:
                  cmd: yq '.version' '${{ matrix.notebook }}' 

            - name: Build and push image
              run: |
                  aux_docker_tag="$(basename ${{ steps.notebook_path.outputs.result }} .ipynb)"
                  notebook_name="$(echo $docker_tag | tr '[:upper:]' '[:lower:]')"
                  tag=henriqueslab/dl4miceverywhere:"$notebook_name"-${{ steps.version.outputs.result }}
                  bash launch.sh -c '${{ matrix.notebook }}' -d . -o . -x -t "$tag"
                  docker image push "$tag"

            # aux_docker_tag="$(basename ${{ steps.notebook_path.outputs.result }} .ipynb)"
            # notebook_name="$(echo $docker_tag | tr '[:upper:]' '[:lower:]')"
            # if [ ${{ matrix.gpu }} -eq 0 ]; then
            #     tag=henriqueslab/dl4miceverywhere:"$notebook_name"-${{ steps.version.outputs.result }}
            #     bash launch.sh -c '${{ matrix.notebook }}' -d . -o . -x -t "$tag"
            # else
            #     tag=henriqueslab/dl4miceverywhere:"$notebook_name"-${{ steps.version.outputs.result }}-gpu
            #     bash launch.sh -c '${{ matrix.notebook }}' -d . -o . -x -g -t "$tag"
            # fi
            # docker image push "$tag"